if game:GetService("ReplicatedStorage"):FindFirstChild("message") then
    if game:GetService("ReplicatedStorage").message:FindFirstChild("Frame") then
        if game:GetService("ReplicatedStorage").message.Frame:FindFirstChild("TextLabel") then
            game:GetService("ReplicatedStorage").message.Frame.TextLabel:Destroy()
        end
    end
end
task.wait(1)
local character = game.Players.LocalPlayer.Character
if not character or not character:FindFirstChildOfClass("Tool") then
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Error",
        Text = "No tool equipped!",
        Duration = 3
    })
    return
end

local gunTool = character:FindFirstChildOfClass("Tool")
local gunName = gunTool.Name

local marketGui = game:GetService("Players").LocalPlayer.PlayerGui["Bronx Market 2"]
if marketGui then
    local marketLabel = marketGui.Body.Frames.Market.TextLabel
    if marketLabel then
        marketLabel.Text = "Picked: " .. gunName
    end
end

local args = {
    gunName,
    900000
}
game:GetService("ReplicatedStorage"):WaitForChild("ListWeaponRemote"):FireServer(unpack(args))

task.wait(0.26)
local ReplicatedStorage = cloneref(game:GetService("ReplicatedStorage"))
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

local function GetCharacter()
    return Players.LocalPlayer.Character
end

local InventoryRemote = ReplicatedStorage:WaitForChild("Inventory")
local BackpackRemote = ReplicatedStorage:WaitForChild("BackpackRemote")

local character = GetCharacter()
if character and character:FindFirstChildOfClass("Tool") then
    local gunTool = character:FindFirstChildOfClass("Tool")
    local gunName = gunTool.Name

    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then humanoid:UnequipTools() end
    BackpackRemote:InvokeServer("Store", gunName)

    task.wait(0.5)

    task.spawn(function()
        InventoryRemote:FireServer("Change", gunName, "Backpack", safe)
    end)
    task.wait(1.2)

    BackpackRemote:InvokeServer("Grab", gunName)
end

task.wait(1)

local function requireMarket()
    local marketGui = game:GetService("Players").LocalPlayer.PlayerGui["Bronx Market 2"]
    local selectedGun = marketGui.Body.Frames.Market.TextLabel.Text:match("Picked: (.+)")
    
    if selectedGun then
        local gunButton = marketGui.Body.Frames.Guns.ScrollingFrame[selectedGun]
        if gunButton then
            for _, connection in pairs(getconnections(gunButton.MouseButton1Click)) do
                connection:Fire()
            end
        end
    end
end

task.spawn(requireMarket)
