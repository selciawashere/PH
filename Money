    local character = game.Players.LocalPlayer.Character
        if not character or not character:FindFirstChild("HumanoidRootPart") then 
            game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "Error",
                Text = "Character not found or invalid",
                Duration = 3
            })
            return 
        end

        local overlay = Instance.new("ScreenGui")
        overlay.Name = "MoneyOverlay"
        overlay.Parent = game.CoreGui
        overlay.IgnoreGuiInset = true
        overlay.ResetOnSpawn = false

        local mainFrame = Instance.new("Frame")
        mainFrame.Size = UDim2.new(1, 0, 1, 0)
        mainFrame.BackgroundColor3 = Color3.new(0, 0, 0)
        mainFrame.BackgroundTransparency = 0
        mainFrame.Parent = overlay

        local gradient = Instance.new("UIGradient")
        gradient.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(20, 20, 20))
        })
        
        gradient.Parent = mainFrame
        local statusText = Instance.new("TextLabel")
        statusText.Size = UDim2.new(0.4, 0, 0.06, 0)
        statusText.Position = UDim2.new(0.3, 0, 0.47, 0)
        statusText.Text = "ðŸ’¸ INFINITE MONEY ACTIVATED ðŸ’¸"
        statusText.TextScaled = true
        statusText.BackgroundTransparency = 1
        statusText.TextColor3 = Color3.fromRGB(255, 215, 0) 
        statusText.Font = Enum.Font.GothamBold
        statusText.Parent = mainFrame

        local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true)
        local tween = game:GetService("TweenService"):Create(statusText, tweenInfo, {
            TextTransparency = 0.3
        })
        tween:Play()
    
        local originalCF = character:GetPivot()
        getgenv().SwimMethod = true
        task.wait(1)
        character:PivotTo(CFrame.new(-50, 287, -320))

        for _, v in pairs(game.Workspace:GetDescendants()) do
            if v:IsA("ProximityPrompt") then
                v.HoldDuration = 0
                v.RequiresLineOfSight = false
            end
        end
    

            local promptsToFire = 1000
            local prompt = workspace["IceFruit Sell"].ProximityPrompt

            for i = 1, promptsToFire do
                fireproximityprompt(prompt, 1, true)
            end

            print("Does it fire?", true)
            task.wait(1)
    
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.Anchored = false
                end
            end
            
            local fadeTween = game:GetService("TweenService"):Create(mainFrame, TweenInfo.new(0.5), {
                BackgroundTransparency = 1
            })
            fadeTween:Play()
            fadeTween.Completed:Wait()
            overlay:Destroy()
            task.wait(1)
            getgenv().SwimMethod = true
            character:PivotTo(originalCF)
            task.wait(1)
            getgenv().SwimMethod = false
        return
